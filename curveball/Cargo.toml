[package]
name = "curveball"
version = "0.5.0"
edition = "2024"
publish = false

[dependencies]
bevy_egui = { version = "0.33.0", default-features = false, features = [ "arboard", "bevy_asset", "bevy_image", "bevy_render", "bytemuck", "default_fonts", "encase", "open_url", "render", "thread_local", "webbrowser", "wgpu-types" ] }
copypasta = "0.10.1"
lib-curveball = { path = "../lib-curveball" }
egui_extras = "0.31.0"
futures-channel = "0.3.31"
glam = "0.30.0"
image = "0.25.5"
thiserror = "2.0.9"
wasm-bindgen-futures = "0.4.49"
web-sys = { version = "0.3.76", features = ["Clipboard", "Window", "Navigator"] }
winit = "0.30.7"
color = "0.2.3"

[dependencies.bevy]
version = "0.15"
default-features = false
features = [
    # "android-game-activity", # Android GameActivity support. Default, choose between this and `android-native-activity`.
    # "android_shared_stdcxx", # Enable using a shared stdlib for cxx on Android
    # "animation", # Enable animation support, and glTF animation loading
    # "bevy_animation", # Provides animation functionality
    "bevy_asset", # Provides asset functionality
    # "bevy_audio", # Provides audio functionality
    "bevy_color", # Provides shared color types and operations
    "bevy_core_pipeline", # Provides cameras and other basic render pipeline features
    # "bevy_gilrs", # Adds gamepad support
    "bevy_gizmos", # Adds support for rendering gizmos
    # "bevy_gltf", # [glTF](https://www.khronos.org/gltf/) support
    "bevy_mesh_picking_backend", # Provides an implementation for picking meshes
    "bevy_pbr", # Adds PBR rendering
    "bevy_picking", # Provides picking functionality
    "bevy_render", # Provides rendering functionality
    # "bevy_scene", # Provides scene functionality
    # "bevy_sprite", # Provides sprite functionality
    # "bevy_sprite_picking_backend", # Provides an implementation for picking sprites
    # "bevy_state", # Enable built in global state machines
    # "bevy_text", # Provides text functionality
    # "bevy_ui", # A custom ECS-driven UI framework
    # "bevy_ui_picking_backend", # Provides an implementation for picking UI
    "bevy_window", # Windowing layer
    "bevy_winit", # winit window and input backend
    # "custom_cursor", # Enable winit custom cursor support
    # "default_font", # Include a default font, containing only ASCII characters, at the cost of a 20kB binary size increase
    # "hdr", # HDR image format support
    "ktx2", # KTX2 compressed texture support
    "multi_threaded", # Enables multithreaded parallelism in the engine. Disabling it forces all engine tasks to run on a single thread.
    "png", # PNG image format support
    "smaa_luts", # Include SMAA Look Up Tables KTX2 Files
    "sysinfo_plugin", # Enables system information diagnostic plugin
    "tonemapping_luts", # Include tonemapping Look Up Tables KTX2 files. If everything is pink, you need to enable this feature or change the `Tonemapping` method for your `Camera2d` or `Camera3d`.
    # "vorbis", # OGG/VORBIS audio format support
    "webgl2", # Enable some limitations to be able to use WebGL2. Please refer to the [WebGL2 and WebGPU](https://github.com/bevyengine/bevy/tree/latest/examples#webgl2-and-webgpu) section of the examples README for more information on how to run Wasm builds with WebGPU.
    "x11", # X11 display server support
    "zstd", # For KTX2 supercompression
]
